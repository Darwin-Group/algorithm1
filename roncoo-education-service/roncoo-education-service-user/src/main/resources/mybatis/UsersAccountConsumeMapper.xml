<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.user.dao.impl.mapper.UsersAccountConsumeMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsume">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="consume_type" jdbcType="TINYINT" property="consumeType"/>
        <result column="consume_amount" jdbcType="DECIMAL" property="consumeAmount"/>
        <result column="balance_amount" jdbcType="DECIMAL" property="balanceAmount"/>
        <result column="order_no" jdbcType="BIGINT" property="orderNo"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , gmt_create, user_id, consume_type, consume_amount, balance_amount, order_no,
    remark
    </sql>
    <select id="selectByExample"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsumeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from users_account_consume
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users_account_consume
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from users_account_consume
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsumeExample">
        delete from users_account_consume
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsume">
        insert into users_account_consume (id, gmt_create, user_id,
                                           consume_type, consume_amount, balance_amount,
                                           order_no, remark)
        values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT},
                #{consumeType,jdbcType=TINYINT}, #{consumeAmount,jdbcType=DECIMAL}, #{balanceAmount,jdbcType=DECIMAL},
                #{orderNo,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsume">
        insert into users_account_consume
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="consumeType != null">
                consume_type,
            </if>
            <if test="consumeAmount != null">
                consume_amount,
            </if>
            <if test="balanceAmount != null">
                balance_amount,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="consumeType != null">
                #{consumeType,jdbcType=TINYINT},
            </if>
            <if test="consumeAmount != null">
                #{consumeAmount,jdbcType=DECIMAL},
            </if>
            <if test="balanceAmount != null">
                #{balanceAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsumeExample"
            resultType="java.lang.Integer">
        select count(*) from users_account_consume
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update users_account_consume
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.consumeType != null">
                consume_type = #{record.consumeType,jdbcType=TINYINT},
            </if>
            <if test="record.consumeAmount != null">
                consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.balanceAmount != null">
                balance_amount = #{record.balanceAmount,jdbcType=DECIMAL},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=BIGINT},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update users_account_consume
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        user_id = #{record.userId,jdbcType=BIGINT},
        consume_type = #{record.consumeType,jdbcType=TINYINT},
        consume_amount = #{record.consumeAmount,jdbcType=DECIMAL},
        balance_amount = #{record.balanceAmount,jdbcType=DECIMAL},
        order_no = #{record.orderNo,jdbcType=BIGINT},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsume">
        update users_account_consume
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="consumeType != null">
                consume_type = #{consumeType,jdbcType=TINYINT},
            </if>
            <if test="consumeAmount != null">
                consume_amount = #{consumeAmount,jdbcType=DECIMAL},
            </if>
            <if test="balanceAmount != null">
                balance_amount = #{balanceAmount,jdbcType=DECIMAL},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=BIGINT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.roncoo.education.user.dao.impl.mapper.entity.UsersAccountConsume">
        update users_account_consume
        set gmt_create     = #{gmtCreate,jdbcType=TIMESTAMP},
            user_id        = #{userId,jdbcType=BIGINT},
            consume_type   = #{consumeType,jdbcType=TINYINT},
            consume_amount = #{consumeAmount,jdbcType=DECIMAL},
            balance_amount = #{balanceAmount,jdbcType=DECIMAL},
            order_no       = #{orderNo,jdbcType=BIGINT},
            remark         = #{remark,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>