<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.roncoo.education.course.dao.impl.mapper.UserStudyMapper">
    <resultMap id="BaseResultMap" type="com.roncoo.education.course.dao.impl.mapper.entity.UserStudy">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="chapter_id" jdbcType="BIGINT" property="chapterId"/>
        <result column="period_id" jdbcType="BIGINT" property="periodId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="resource_type" jdbcType="TINYINT" property="resourceType"/>
        <result column="current_duration" jdbcType="INTEGER" property="currentDuration"/>
        <result column="current_page" jdbcType="INTEGER" property="currentPage"/>
        <result column="progress" jdbcType="DECIMAL" property="progress"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, gmt_create, gmt_modified, course_id, chapter_id, period_id, user_id, resource_type,
    current_duration, current_page, progress
    </sql>
    <select id="selectByExample" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_study
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_study
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user_study
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudyExample">
        delete from user_study
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudy">
        insert into user_study (id, gmt_create, gmt_modified,
                                course_id, chapter_id, period_id,
                                user_id, resource_type, current_duration,
                                current_page, progress)
        values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP},
                #{courseId,jdbcType=BIGINT}, #{chapterId,jdbcType=BIGINT}, #{periodId,jdbcType=BIGINT},
                #{userId,jdbcType=BIGINT}, #{resourceType,jdbcType=TINYINT}, #{currentDuration,jdbcType=INTEGER},
                #{currentPage,jdbcType=INTEGER}, #{progress,jdbcType=DECIMAL})
    </insert>
    <insert id="insertSelective" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudy">
        insert into user_study
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="chapterId != null">
                chapter_id,
            </if>
            <if test="periodId != null">
                period_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="resourceType != null">
                resource_type,
            </if>
            <if test="currentDuration != null">
                current_duration,
            </if>
            <if test="currentPage != null">
                current_page,
            </if>
            <if test="progress != null">
                progress,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="chapterId != null">
                #{chapterId,jdbcType=BIGINT},
            </if>
            <if test="periodId != null">
                #{periodId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="resourceType != null">
                #{resourceType,jdbcType=TINYINT},
            </if>
            <if test="currentDuration != null">
                #{currentDuration,jdbcType=INTEGER},
            </if>
            <if test="currentPage != null">
                #{currentPage,jdbcType=INTEGER},
            </if>
            <if test="progress != null">
                #{progress,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudyExample" resultType="java.lang.Integer">
        select count(*) from user_study
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_study
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.gmtCreate != null">
                gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=BIGINT},
            </if>
            <if test="record.chapterId != null">
                chapter_id = #{record.chapterId,jdbcType=BIGINT},
            </if>
            <if test="record.periodId != null">
                period_id = #{record.periodId,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.resourceType != null">
                resource_type = #{record.resourceType,jdbcType=TINYINT},
            </if>
            <if test="record.currentDuration != null">
                current_duration = #{record.currentDuration,jdbcType=INTEGER},
            </if>
            <if test="record.currentPage != null">
                current_page = #{record.currentPage,jdbcType=INTEGER},
            </if>
            <if test="record.progress != null">
                progress = #{record.progress,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_study
        set id = #{record.id,jdbcType=BIGINT},
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        course_id = #{record.courseId,jdbcType=BIGINT},
        chapter_id = #{record.chapterId,jdbcType=BIGINT},
        period_id = #{record.periodId,jdbcType=BIGINT},
        user_id = #{record.userId,jdbcType=BIGINT},
        resource_type = #{record.resourceType,jdbcType=TINYINT},
        current_duration = #{record.currentDuration,jdbcType=INTEGER},
        current_page = #{record.currentPage,jdbcType=INTEGER},
        progress = #{record.progress,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudy">
        update user_study
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="chapterId != null">
                chapter_id = #{chapterId,jdbcType=BIGINT},
            </if>
            <if test="periodId != null">
                period_id = #{periodId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="resourceType != null">
                resource_type = #{resourceType,jdbcType=TINYINT},
            </if>
            <if test="currentDuration != null">
                current_duration = #{currentDuration,jdbcType=INTEGER},
            </if>
            <if test="currentPage != null">
                current_page = #{currentPage,jdbcType=INTEGER},
            </if>
            <if test="progress != null">
                progress = #{progress,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.roncoo.education.course.dao.impl.mapper.entity.UserStudy">
        update user_study
        set gmt_create       = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified     = #{gmtModified,jdbcType=TIMESTAMP},
            course_id        = #{courseId,jdbcType=BIGINT},
            chapter_id       = #{chapterId,jdbcType=BIGINT},
            period_id        = #{periodId,jdbcType=BIGINT},
            user_id          = #{userId,jdbcType=BIGINT},
            resource_type    = #{resourceType,jdbcType=TINYINT},
            current_duration = #{currentDuration,jdbcType=INTEGER},
            current_page     = #{currentPage,jdbcType=INTEGER},
            progress         = #{progress,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
